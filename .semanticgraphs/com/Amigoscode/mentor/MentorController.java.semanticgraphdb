
QF:\Projects\Amigoscode2\src\main\java\com\Amigoscode\mentor\MentorController.java€	
&com.Amigoscode.mentor.MentorControllerCLASS[
QF:\Projects\Amigoscode2\src\main\java\com\Amigoscode\mentor\MentorController.java	 	(" 
packagecom.Amigoscode.mentor"
isFinalfalse"
inner classfalse"

isAbstractfalse"Â
declarationStringœ<mark class="annotation">@RestController</mark> <br><mark class="annotation">@RequestMapping("api/mentor")</mark> <br><mark class="modifier">public </mark><mark class="modifier">class </mark>MentorController"
accesspublic*MentorController2»
\com.Amigoscode.mentor.MentorController.MentorController(com.Amigoscode.mentor.MentorService)DECLARATION[
QF:\Projects\Amigoscode2\src\main\java\com\Amigoscode\mentor\MentorController.java (2¢
6com.Amigoscode.mentor.MentorController.getAllMentors()DECLARATION[
QF:\Projects\Amigoscode2\src\main\java\com\Amigoscode\mentor\MentorController.java (%2¬
Vcom.Amigoscode.mentor.MentorController.registerNewMentor(com.Amigoscode.mentor.Mentor)DECLARATION[
QF:\Projects\Amigoscode2\src\main\java\com\Amigoscode\mentor\MentorController.java (!2¨
@com.Amigoscode.mentor.MentorController?mentorService@11.32:11.45DECLARATION[
QF:\Projects\Amigoscode2\src\main\java\com\Amigoscode\mentor\MentorController.java  (-ˆ
\com.Amigoscode.mentor.MentorController.MentorController(com.Amigoscode.mentor.MentorService)CONSTRUCTOR[
QF:\Projects\Amigoscode2\src\main\java\com\Amigoscode\mentor\MentorController.java ("≥
declarationStringù<mark class="annotation">@Autowired</mark> <br><mark class="modifier">public </mark><mark class="method">MentorController</mark>(MentorService mentorService)*MentorController2œ
jcom.Amigoscode.mentor.MentorController.MentorController(com.Amigoscode.mentor.MentorService)!mentorServiceCALL[
QF:\Projects\Amigoscode2\src\main\java\com\Amigoscode\mentor\MentorController.java (*2•
@com.Amigoscode.mentor.MentorController?mentorService@11.32:11.45CALL[
QF:\Projects\Amigoscode2\src\main\java\com\Amigoscode\mentor\MentorController.java (2‘
jcom.Amigoscode.mentor.MentorController.MentorController(com.Amigoscode.mentor.MentorService)!mentorService	PARAMETER[
QF:\Projects\Amigoscode2\src\main\java\com\Amigoscode\mentor\MentorController.java* (72í
&com.Amigoscode.mentor.MentorControllerRETURN_TYPE[
QF:\Projects\Amigoscode2\src\main\java\com\Amigoscode\mentor\MentorController.java (…
jcom.Amigoscode.mentor.MentorController.MentorController(com.Amigoscode.mentor.MentorService)!mentorService	PARAMETER[
QF:\Projects\Amigoscode2\src\main\java\com\Amigoscode\mentor\MentorController.java* (7"
typeMentorService"
isFinalfalse"0
declarationStringMentorService mentorService*mentorService2à
#com.Amigoscode.mentor.MentorServiceTYPE[
QF:\Projects\Amigoscode2\src\main\java\com\Amigoscode\mentor\MentorController.java ()Ú
6com.Amigoscode.mentor.MentorController.getAllMentors()METHOD[
QF:\Projects\Amigoscode2\src\main\java\com\Amigoscode\mentor\MentorController.java (%"
isFinalfalse"©
declarationStringì<mark class="annotation">@GetMapping</mark> <br><mark class="modifier">public </mark>List&lt;Mentor&gt; <mark class="method">getAllMentors</mark>()"
isStaticfalse"
accesspublic"

isAbstractfalse"
typeList<Mentor>*getAllMentors2•
@com.Amigoscode.mentor.MentorController?mentorService@11.32:11.45CALL[
QF:\Projects\Amigoscode2\src\main\java\com\Amigoscode\mentor\MentorController.java (2z
java.util.ListRETURN_TYPE[
QF:\Projects\Amigoscode2\src\main\java\com\Amigoscode\mentor\MentorController.java (2ë
com.Amigoscode.mentor.MentorRETURN_TYPE_ARGUMENT[
QF:\Projects\Amigoscode2\src\main\java\com\Amigoscode\mentor\MentorController.java (¢	
Vcom.Amigoscode.mentor.MentorController.registerNewMentor(com.Amigoscode.mentor.Mentor)METHOD[
QF:\Projects\Amigoscode2\src\main\java\com\Amigoscode\mentor\MentorController.java (!"
isFinalfalse"Ã
declarationString∂ <br><mark class="modifier">public </mark><mark class="modifier">void</mark> <mark class="method">registerNewMentor</mark>(<mark class="annotation">@RequestBody</mark> Mentor mentor)"
isStaticfalse"
accesspublic"

isAbstractfalse"
typevoid*registerNewMentor2•
@com.Amigoscode.mentor.MentorController?mentorService@11.32:11.45CALL[
QF:\Projects\Amigoscode2\src\main\java\com\Amigoscode\mentor\MentorController.java (2¬
]com.Amigoscode.mentor.MentorController.registerNewMentor(com.Amigoscode.mentor.Mentor)!mentorCALL[
QF:\Projects\Amigoscode2\src\main\java\com\Amigoscode\mentor\MentorController.java# ()2«
]com.Amigoscode.mentor.MentorController.registerNewMentor(com.Amigoscode.mentor.Mentor)!mentor	PARAMETER[
QF:\Projects\Amigoscode2\src\main\java\com\Amigoscode\mentor\MentorController.java6 (<2p
voidRETURN_TYPE[
QF:\Projects\Amigoscode2\src\main\java\com\Amigoscode\mentor\MentorController.java (∆
]com.Amigoscode.mentor.MentorController.registerNewMentor(com.Amigoscode.mentor.Mentor)!mentor	PARAMETER[
QF:\Projects\Amigoscode2\src\main\java\com\Amigoscode\mentor\MentorController.java6 (<"
typeMentor"
isFinalfalse"O
declarationString:<mark class="annotation">@RequestBody</mark> Mentor mentor*mentor2Å
com.Amigoscode.mentor.MentorTYPE[
QF:\Projects\Amigoscode2\src\main\java\com\Amigoscode\mentor\MentorController.java/ (5≠
@com.Amigoscode.mentor.MentorController?mentorService@11.32:11.45VALUE[
QF:\Projects\Amigoscode2\src\main\java\com\Amigoscode\mentor\MentorController.java  (-"
isFinaltrue"
typeMentorService"ú
declarationStringÜ<mark class="modifier">private </mark><mark class="modifier">final </mark>MentorService <mark class="class-field">mentorService</mark>"
isStaticfalse"
accessprivate*mentorService2à
#com.Amigoscode.mentor.MentorServiceTYPE[
QF:\Projects\Amigoscode2\src\main\java\com\Amigoscode\mentor\MentorController.java (
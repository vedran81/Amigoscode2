
QF:\Projects\Amigoscode2\src\main\java\com\Amigoscode\mentor\MentorController.javaï¿½	
&com.Edu.mentor.MentorControllerCLASS[
QF:\Projects\Amigoscode2\src\main\java\com\Amigoscode\mentor\MentorController.java	
 	(" 
packagecom.Amigoscode.mentor"
isFinalfalse"
inner classfalse"

isAbstractfalse"ï¿½
declarationStringï¿½<mark class="annotation">@RestController</mark> <br><mark class="annotation">@RequestMapping("api/mentor")</mark> <br><mark class="modifier">public </mark><mark class="modifier">class </mark>MentorController"
accesspublic*MentorController2ï¿½
\com.Edu.mentor.MentorController.MentorController(com.Edu.mentor.MentorService)DECLARATION[
QF:\Projects\Amigoscode2\src\main\java\com\Amigoscode\mentor\MentorController.java (2ï¿½
6com.Amigoscode.mentor.MentorController.getAllMentors()DECLARATION[
QF:\Projects\Amigoscode2\src\main\java\com\Amigoscode\mentor\MentorController.java (%2ï¿½
Vcom.Amigoscode.mentor.MentorController.registerNewMentor(com.Edu.mentor.Mentor)DECLARATION[
QF:\Projects\Amigoscode2\src\main\java\com\Amigoscode\mentor\MentorController.java (!2ï¿½
@com.Edu.mentor.MentorController?mentorService@11.32:11.45DECLARATION[
QF:\Projects\Amigoscode2\src\main\java\com\Amigoscode\mentor\MentorController.java  (-ï¿½
\com.Edu.mentor.MentorController.MentorController(com.Edu.mentor.MentorService)CONSTRUCTOR[
QF:\Projects\Amigoscode2\src\main\java\com\Amigoscode\mentor\MentorController.java ("ï¿½
declarationStringï¿½<mark class="annotation">@Autowired</mark> <br><mark class="modifier">public </mark><mark class="method">MentorController</mark>(MentorService mentorService)*MentorController2ï¿½
jcom.Amigoscode.mentor.MentorController.MentorController(com.Edu.mentor.MentorService)!mentorServiceCALL[
QF:\Projects\Amigoscode2\src\main\java\com\Amigoscode\mentor\MentorController.java (*2ï¿½
@com.Edu.mentor.MentorController?mentorService@11.32:11.45CALL[
QF:\Projects\Amigoscode2\src\main\java\com\Amigoscode\mentor\MentorController.java
 (2ï¿½
jcom.Amigoscode.mentor.MentorController.MentorController(com.Edu.mentor.MentorService)!mentorService	PARAMETER[
QF:\Projects\Amigoscode2\src\main\java\com\Amigoscode\mentor\MentorController.java* (72ï¿½
&com.Edu.mentor.MentorControllerRETURN_TYPE[
QF:\Projects\Amigoscode2\src\main\java\com\Amigoscode\mentor\MentorController.java (ï¿½
jcom.Amigoscode.mentor.MentorController.MentorController(com.Edu.mentor.MentorService)!mentorService	PARAMETER[
QF:\Projects\Amigoscode2\src\main\java\com\Amigoscode\mentor\MentorController.java* (7"
type
MentorService"
isFinalfalse"0
declarationStringMentorService mentorService*
mentorService2ï¿½
#com.Edu.mentor.MentorServiceTYPE[
QF:\Projects\Amigoscode2\src\main\java\com\Amigoscode\mentor\MentorController.java ()ï¿½
6com.Amigoscode.mentor.MentorController.getAllMentors()METHOD[
QF:\Projects\Amigoscode2\src\main\java\com\Amigoscode\mentor\MentorController.java (%"
isFinalfalse"ï¿½
declarationStringï¿½<mark class="annotation">@GetMapping</mark> <br><mark class="modifier">public </mark>List&lt;Mentor&gt; <mark class="method">getAllMentors</mark>()"
isStaticfalse"
accesspublic"

isAbstractfalse"
typeList<Mentor>*
getAllMentors2ï¿½
@com.Edu.mentor.MentorController?mentorService@11.32:11.45CALL[
QF:\Projects\Amigoscode2\src\main\java\com\Amigoscode\mentor\MentorController.java (2z
java.util.ListRETURN_TYPE[
QF:\Projects\Amigoscode2\src\main\java\com\Amigoscode\mentor\MentorController.java (2ï¿½
com.Edu.mentor.MentorRETURN_TYPE_ARGUMENT[
QF:\Projects\Amigoscode2\src\main\java\com\Amigoscode\mentor\MentorController.java (ï¿½	
Vcom.Amigoscode.mentor.MentorController.registerNewMentor(com.Edu.mentor.Mentor)METHOD[
QF:\Projects\Amigoscode2\src\main\java\com\Amigoscode\mentor\MentorController.java (!"
isFinalfalse"ï¿½
declarationStringï¿½ <br><mark class="modifier">public </mark><mark class="modifier">void</mark> <mark class="method">registerNewMentor</mark>(<mark class="annotation">@RequestBody</mark> Mentor mentor)"
isStaticfalse"
accesspublic"

isAbstractfalse"
typevoid*registerNewMentor2ï¿½
@com.Edu.mentor.MentorController?mentorService@11.32:11.45CALL[
QF:\Projects\Amigoscode2\src\main\java\com\Amigoscode\mentor\MentorController.java (2ï¿½
]com.Edu.mentor.MentorController.registerNewMentor(com.Edu.mentor.Mentor)!mentorCALL[
QF:\Projects\Amigoscode2\src\main\java\com\Amigoscode\mentor\MentorController.java# ()2ï¿½
]com.Edu.mentor.MentorController.registerNewMentor(com.Edu.mentor.Mentor)!mentor	PARAMETER[
QF:\Projects\Amigoscode2\src\main\java\com\Amigoscode\mentor\MentorController.java6 (<2p
voidRETURN_TYPE[
QF:\Projects\Amigoscode2\src\main\java\com\Amigoscode\mentor\MentorController.java (ï¿½
]com.Edu.mentor.MentorController.registerNewMentor(com.Edu.mentor.Mentor)!mentor	PARAMETER[
QF:\Projects\Amigoscode2\src\main\java\com\Amigoscode\mentor\MentorController.java6 (<"
typeMentor"
isFinalfalse"O
declarationString:<mark class="annotation">@RequestBody</mark> Mentor mentor*mentor2ï¿½
com.Edu.mentor.MentorTYPE[
QF:\Projects\Amigoscode2\src\main\java\com\Amigoscode\mentor\MentorController.java/ (5ï¿½
@com.Edu.mentor.MentorController?mentorService@11.32:11.45VALUE[
QF:\Projects\Amigoscode2\src\main\java\com\Amigoscode\mentor\MentorController.java  (-"
isFinaltrue"
type
MentorService"ï¿½
declarationStringï¿½<mark class="modifier">private </mark><mark class="modifier">final </mark>MentorService <mark class="class-field">mentorService</mark>"
isStaticfalse"
accessprivate*
mentorService2ï¿½
#com.Edu.mentor.MentorServiceTYPE[
QF:\Projects\Amigoscode2\src\main\java\com\Amigoscode\mentor\MentorController.java (

WF:\Projects\Amigoscode2\src\main\java\com\Amigoscode\enrolment\EnrolmentRepository.javaï¿½
,com.Edu.enrolment.EnrolmentRepositoryTRAITa
WF:\Projects\Amigoscode2\src\main\java\com\Amigoscode\enrolment\EnrolmentRepository.java	 	($"#
packagecom.Amigoscode.enrolment"
isFinalfalse"
inner classfalse"

isAbstractfalse"ï¿½
declarationStringï¿½<mark class="annotation">@Repository</mark> <br><mark class="modifier">public </mark><mark class="modifier">interface </mark>EnrolmentRepository<mark class="modifier"> extends </mark>JpaRepository<Enrolment, Long><mark class="modifier">,</mark> JpaSpecificationExecutor<Enrolment>"
accesspublic*EnrolmentRepository2ï¿½
lcom.Amigoscode.enrolment.EnrolmentRepository.existsByStudent_IdAndSubject_Id(java.lang.Long, java.lang.Long)DECLARATIONa
WF:\Projects\Amigoscode2\src\main\java\com\Amigoscode\enrolment\EnrolmentRepository.java (+2ï¿½
Mcom.Amigoscode.enrolment.EnrolmentRepository.findByStudent_Id(java.lang.Long)DECLARATIONa
WF:\Projects\Amigoscode2\src\main\java\com\Amigoscode\enrolment\EnrolmentRepository.java
 
($2ï¿½
Mcom.Amigoscode.enrolment.EnrolmentRepository.findBysubject_Id(java.lang.Long)DECLARATIONa
WF:\Projects\Amigoscode2\src\main\java\com\Amigoscode\enrolment\EnrolmentRepository.java ($2ï¿½
jcom.Amigoscode.enrolment.EnrolmentRepository.findByStudent_IdAndSubject_Id(java.lang.Long, java.lang.Long)DECLARATIONa
WF:\Projects\Amigoscode2\src\main\java\com\Amigoscode\enrolment\EnrolmentRepository.java (+2ï¿½
5org.springframework.data.jpa.repository.JpaRepositoryEXTENDa
WF:\Projects\Amigoscode2\src\main\java\com\Amigoscode\enrolment\EnrolmentRepository.java	- 	(:2ï¿½
@org.springframework.data.jpa.repository.JpaSpecificationExecutorEXTENDa
WF:\Projects\Amigoscode2\src\main\java\com\Amigoscode\enrolment\EnrolmentRepository.java	M 	(e2ï¿½
"com.Edu.enrolment.EnrolmentEXTEND_TYPE_ARGUMENTa
WF:\Projects\Amigoscode2\src\main\java\com\Amigoscode\enrolment\EnrolmentRepository.java	; 	(D2ï¿½
java.lang.LongEXTEND_TYPE_ARGUMENTa
WF:\Projects\Amigoscode2\src\main\java\com\Amigoscode\enrolment\EnrolmentRepository.java	F 	(J2ï¿½
"com.Edu.enrolment.EnrolmentEXTEND_TYPE_ARGUMENTa
WF:\Projects\Amigoscode2\src\main\java\com\Amigoscode\enrolment\EnrolmentRepository.java	f 	(oï¿½	
lcom.Amigoscode.enrolment.EnrolmentRepository.existsByStudent_IdAndSubject_Id(java.lang.Long, java.lang.Long)METHODa
WF:\Projects\Amigoscode2\src\main\java\com\Amigoscode\enrolment\EnrolmentRepository.java (+"
isFinalfalse"ï¿½
declarationStringï¿½<mark class="modifier"> </mark><mark class="modifier">boolean</mark> <mark class="method">existsByStudent_IdAndSubject_Id</mark>(Long studentId<mark class="modifier"><mark class="modifier">,</mark></mark> Long subjectId)"
isStaticfalse"
accesspackage_private"

isAbstractfalse"
typeboolean*existsByStudent_IdAndSubject_Id2ï¿½
vcom.Amigoscode.enrolment.EnrolmentRepository.existsByStudent_IdAndSubject_Id(java.lang.Long, java.lang.Long)!studentId	PARAMETERa
WF:\Projects\Amigoscode2\src\main\java\com\Amigoscode\enrolment\EnrolmentRepository.java1 (:2ï¿½
vcom.Amigoscode.enrolment.EnrolmentRepository.existsByStudent_IdAndSubject_Id(java.lang.Long, java.lang.Long)!subjectId	PARAMETERa
WF:\Projects\Amigoscode2\src\main\java\com\Amigoscode\enrolment\EnrolmentRepository.javaA (J2y
booleanRETURN_TYPEa
WF:\Projects\Amigoscode2\src\main\java\com\Amigoscode\enrolment\EnrolmentRepository.java (ï¿½
vcom.Amigoscode.enrolment.EnrolmentRepository.existsByStudent_IdAndSubject_Id(java.lang.Long, java.lang.Long)!studentId	PARAMETERa
WF:\Projects\Amigoscode2\src\main\java\com\Amigoscode\enrolment\EnrolmentRepository.java1 (:"
typeLong"
isFinalfalse"#
declarationStringLong studentId*	studentId2y
java.lang.LongTYPEa
WF:\Projects\Amigoscode2\src\main\java\com\Amigoscode\enrolment\EnrolmentRepository.java, (0ï¿½
vcom.Amigoscode.enrolment.EnrolmentRepository.existsByStudent_IdAndSubject_Id(java.lang.Long, java.lang.Long)!subjectId	PARAMETERa
WF:\Projects\Amigoscode2\src\main\java\com\Amigoscode\enrolment\EnrolmentRepository.javaA (J"
typeLong"
isFinalfalse"#
declarationStringLong subjectId*	subjectId2y
java.lang.LongTYPEa
WF:\Projects\Amigoscode2\src\main\java\com\Amigoscode\enrolment\EnrolmentRepository.java< (@ï¿½
Mcom.Amigoscode.enrolment.EnrolmentRepository.findByStudent_Id(java.lang.Long)METHODa
WF:\Projects\Amigoscode2\src\main\java\com\Amigoscode\enrolment\EnrolmentRepository.java
 
($"
isFinalfalse"
declarationStringj<mark class="modifier"> </mark>List&lt;Enrolment&gt; <mark class="method">findByStudent_Id</mark>(Long id)"
isStaticfalse"
accesspackage_private"

isAbstractfalse"
typeList<Enrolment>*findByStudent_Id2ï¿½
Pcom.Amigoscode.enrolment.EnrolmentRepository.findByStudent_Id(java.lang.Long)!id	PARAMETERa
WF:\Projects\Amigoscode2\src\main\java\com\Amigoscode\enrolment\EnrolmentRepository.java
* 
(,2ï¿½
java.util.ListRETURN_TYPEa
WF:\Projects\Amigoscode2\src\main\java\com\Amigoscode\enrolment\EnrolmentRepository.java
 
(2ï¿½
"com.Edu.enrolment.EnrolmentRETURN_TYPE_ARGUMENTa
WF:\Projects\Amigoscode2\src\main\java\com\Amigoscode\enrolment\EnrolmentRepository.java
	 
(ï¿½
Pcom.Amigoscode.enrolment.EnrolmentRepository.findByStudent_Id(java.lang.Long)!id	PARAMETERa
WF:\Projects\Amigoscode2\src\main\java\com\Amigoscode\enrolment\EnrolmentRepository.java
* 
(,"
typeLong"
isFinalfalse"
declarationStringLong id*id2y
java.lang.LongTYPEa
WF:\Projects\Amigoscode2\src\main\java\com\Amigoscode\enrolment\EnrolmentRepository.java
% 
()ï¿½
Mcom.Amigoscode.enrolment.EnrolmentRepository.findBysubject_Id(java.lang.Long)METHODa
WF:\Projects\Amigoscode2\src\main\java\com\Amigoscode\enrolment\EnrolmentRepository.java ($"
isFinalfalse"
declarationStringj<mark class="modifier"> </mark>List&lt;Enrolment&gt; <mark class="method">findBysubject_Id</mark>(Long id)"
isStaticfalse"
accesspackage_private"

isAbstractfalse"
typeList<Enrolment>*findBysubject_Id2ï¿½
Pcom.Amigoscode.enrolment.EnrolmentRepository.findBysubject_Id(java.lang.Long)!id	PARAMETERa
WF:\Projects\Amigoscode2\src\main\java\com\Amigoscode\enrolment\EnrolmentRepository.java* (,2ï¿½
java.util.ListRETURN_TYPEa
WF:\Projects\Amigoscode2\src\main\java\com\Amigoscode\enrolment\EnrolmentRepository.java (2ï¿½
"com.Edu.enrolment.EnrolmentRETURN_TYPE_ARGUMENTa
WF:\Projects\Amigoscode2\src\main\java\com\Amigoscode\enrolment\EnrolmentRepository.java	 (ï¿½
Pcom.Amigoscode.enrolment.EnrolmentRepository.findBysubject_Id(java.lang.Long)!id	PARAMETERa
WF:\Projects\Amigoscode2\src\main\java\com\Amigoscode\enrolment\EnrolmentRepository.java* (,"
typeLong"
isFinalfalse"
declarationStringLong id*id2y
java.lang.LongTYPEa
WF:\Projects\Amigoscode2\src\main\java\com\Amigoscode\enrolment\EnrolmentRepository.java% ()ï¿½	
jcom.Amigoscode.enrolment.EnrolmentRepository.findByStudent_IdAndSubject_Id(java.lang.Long, java.lang.Long)METHODa
WF:\Projects\Amigoscode2\src\main\java\com\Amigoscode\enrolment\EnrolmentRepository.java (+"
isFinalfalse"ï¿½
declarationStringï¿½<mark class="modifier"> </mark>Enrolment <mark class="method">findByStudent_IdAndSubject_Id</mark>(Long studentId<mark class="modifier"><mark class="modifier">,</mark></mark> Long subjectId)"
isStaticfalse"
accesspackage_private"

isAbstractfalse"
type	Enrolment*findByStudent_IdAndSubject_Id2ï¿½
tcom.Amigoscode.enrolment.EnrolmentRepository.findByStudent_IdAndSubject_Id(java.lang.Long, java.lang.Long)!studentId	PARAMETERa
WF:\Projects\Amigoscode2\src\main\java\com\Amigoscode\enrolment\EnrolmentRepository.java1 (:2ï¿½
tcom.Amigoscode.enrolment.EnrolmentRepository.findByStudent_IdAndSubject_Id(java.lang.Long, java.lang.Long)!subjectId	PARAMETERa
WF:\Projects\Amigoscode2\src\main\java\com\Amigoscode\enrolment\EnrolmentRepository.javaA (J2ï¿½
"com.Edu.enrolment.EnrolmentRETURN_TYPEa
WF:\Projects\Amigoscode2\src\main\java\com\Amigoscode\enrolment\EnrolmentRepository.java (
ï¿½
tcom.Amigoscode.enrolment.EnrolmentRepository.findByStudent_IdAndSubject_Id(java.lang.Long, java.lang.Long)!studentId	PARAMETERa
WF:\Projects\Amigoscode2\src\main\java\com\Amigoscode\enrolment\EnrolmentRepository.java1 (:"
typeLong"
isFinalfalse"#
declarationStringLong studentId*	studentId2y
java.lang.LongTYPEa
WF:\Projects\Amigoscode2\src\main\java\com\Amigoscode\enrolment\EnrolmentRepository.java, (0ï¿½
tcom.Amigoscode.enrolment.EnrolmentRepository.findByStudent_IdAndSubject_Id(java.lang.Long, java.lang.Long)!subjectId	PARAMETERa
WF:\Projects\Amigoscode2\src\main\java\com\Amigoscode\enrolment\EnrolmentRepository.javaA (J"
typeLong"
isFinalfalse"#
declarationStringLong subjectId*	subjectId2y
java.lang.LongTYPEa
WF:\Projects\Amigoscode2\src\main\java\com\Amigoscode\enrolment\EnrolmentRepository.java< (@